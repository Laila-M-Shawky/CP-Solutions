/*═▄█▀█▄══▄███▄═    ██╗      █████╗ ██╗██╗      █████╗     ═▄█▀█▄══▄███▄═      ▐█░██████████▌    ██║     ██╔══██╗██║██║     ██╔══██╗    ▐█░██████████▌      ═██▒█████████═    ██║     ███████║██║██║     ███████║    ═██▒█████████═      ══▀████████▀══    ██║     ██╔══██║██║██║     ██╔══██║    ══▀████████▀══      ════╔▀██▀╗════    ███████╗██║  ██║██║███████╗██║  ██║    ════╔▀██▀╗════    ╚════╝        ╚══════╝╚═╝  ╚═╝╚═╝╚══════╝╚═╝  ╚═╝        ╚════╝   Believe in yourself ,( try and try and then try ), You can do it ⡿⣡⣿⣿⡟⡼⡁⠁⣰⠂⡾⠉⢨⣿⠃⣿⡿⠍⣾⣟⢤⣿⢇⣿⢇⣿⣿⢿        ⣱⣿⣿⡟⡐⣰⣧⡷⣿⣴⣧⣤⣼⣯⢸⡿⠁⣰⠟⢀⣼⠏⣲⠏⢸⣿⡟⣿         ⣿⣿⡟⠁⠄⠟⣁⠄⢡⣿⣿⣿⣿⣿⣿⣦⣼⢟⢀⡼⠃⡹⠃⡀⢸⡿⢸⣿         ⣿⣿⠃⠄⢀⣾⠋⠓⢰⣿⣿⣿⣿⣿⣿⠿⣿⣿⣾⣅⢔⣕⡇⡇⡼⢁⣿⣿                 ⣿⡟⠄⠄⣾⣇⠷⣢⣿⣿⣿⣿⣿⣿⣿⣭⣀⡈⠙⢿⣿⣿⡇⡧⢁⣾⣿⣿           ⣿⡇⠄⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢻⠇⠄⠄⢿⣿⡇⢡⣾⣿⣿⣿           ⣿⣷⢰⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⢰⣧⣀⡄⢀⠘⡿⣰⣿⣿⣿⣿⣿            ⢹⣿⢸⣿⣿⠟⠻⢿⣿⣿⣿⣿⣿⣿⣿⣶⣭⣉⣤⣿⢈⣼⣿⣿⣿⣿⣿⣿          ⢸⠇⡜⣿⡟⠄⠄⠄⠈⠙⣿⣿⣿⣿⣿⣿⣿⣿⠟⣱⣻⣿⣿⣿⣿⣿⠟⠁            ⠄⣰⡗⠹⣿⣄⠄⠄⠄⢀⣿⣿⣿⣿⣿⣿⠟⣅⣥⣿⣿⣿⣿⠿⠋⠄⠄⣾         ⠜⠋⢠⣷⢻⣿⣿⣶⣾⣿⣿⣿⣿⠿⣛⣥⣾⣿⠿⠟⠛⠉⠄⠄   */ #include<bits/stdc++.h>#include<unordered_map>#define Statixia ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);#define endl "\n"#define ceil(x, y) ((x + y -1) / y)#define floor(x, y) (x / y)#define round(x, y) ((x + y / 2) / y)#define clr(arr, x) memset(arr, x, sizeof arr)#define all(v) v.begin(),v.end()#define allr(s) s.rbegin(),s.rend()#define rt(s) return cout<<s,0#define watch(x) cout<<(#x)<<" = "<<x<<endl#define sz(s) (int)(s.size())#define OO 0x3f3f3f3f3f3f3f3fLLconst int oo = 0x3f3f3f3f, mod = 1e9 + 7;using namespace std;typedef long long ll;typedef long double ld;typedef unsigned long long ull;int dx[] { 1, -1, 0, 0, 1, 1, -1, -1 };int dy[] { 0, 0, 1, -1, 1, -1, 1, -1 };ll gcd(ll a, ll b) {    return b == 0 ? abs(a) : gcd(b, a % b);}ll lcm(ll a, ll b) {    return a / gcd(a, b) * b;} ll get_min(ll arr[], ll index, ll size){    if(index == 0)        return abs(arr[index] - arr[index + 1]);    else if(index == size - 1)        return abs(arr[index] - arr[index - 1]);    else    {        if(abs(arr[index] - arr[index - 1]) < abs(arr[index] - arr[index + 1]))        {            return abs(arr[index] - arr[index - 1]);        }        else        return abs(arr[index] - arr[index + 1]);    }} ll get_max(ll arr[], ll index, ll size){    if(abs(arr[index] - arr[0]) < abs(arr[index] - arr[size - 1]))    {        return abs(arr[index] - arr[size - 1]);    }    else    return abs(arr[index] - arr[0]);} void solve(){    ll size;    cin >> size;    ll arr[size];    for (ll i = 0; i < size; ++i)    {        cin >> arr[i];    }    for (ll i = 0; i < size; ++i)    {        cout << get_min(arr, i, size) << ' ' << get_max(arr, i, size) << '\n';    }} int main(){    Statixia    int t = 1;    //cin >> t;    while (t--)    {        solve();    }    return 0;}