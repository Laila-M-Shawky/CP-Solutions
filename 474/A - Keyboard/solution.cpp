/*═▄█▀█▄══▄███▄═    ██╗      █████╗ ██╗██╗      █████╗     ═▄█▀█▄══▄███▄═      ▐█░██████████▌    ██║     ██╔══██╗██║██║     ██╔══██╗    ▐█░██████████▌      ═██▒█████████═    ██║     ███████║██║██║     ███████║    ═██▒█████████═      ══▀████████▀══    ██║     ██╔══██║██║██║     ██╔══██║    ══▀████████▀══      ════╔▀██▀╗════    ███████╗██║  ██║██║███████╗██║  ██║    ════╔▀██▀╗════    ╚════╝        ╚══════╝╚═╝  ╚═╝╚═╝╚══════╝╚═╝  ╚═╝        ╚════╝   Believe in yourself ,( try and try and then try ), You can do it ⡿⣡⣿⣿⡟⡼⡁⠁⣰⠂⡾⠉⢨⣿⠃⣿⡿⠍⣾⣟⢤⣿⢇⣿⢇⣿⣿⢿        ⣱⣿⣿⡟⡐⣰⣧⡷⣿⣴⣧⣤⣼⣯⢸⡿⠁⣰⠟⢀⣼⠏⣲⠏⢸⣿⡟⣿         ⣿⣿⡟⠁⠄⠟⣁⠄⢡⣿⣿⣿⣿⣿⣿⣦⣼⢟⢀⡼⠃⡹⠃⡀⢸⡿⢸⣿         ⣿⣿⠃⠄⢀⣾⠋⠓⢰⣿⣿⣿⣿⣿⣿⠿⣿⣿⣾⣅⢔⣕⡇⡇⡼⢁⣿⣿                 ⣿⡟⠄⠄⣾⣇⠷⣢⣿⣿⣿⣿⣿⣿⣿⣭⣀⡈⠙⢿⣿⣿⡇⡧⢁⣾⣿⣿           ⣿⡇⠄⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢻⠇⠄⠄⢿⣿⡇⢡⣾⣿⣿⣿           ⣿⣷⢰⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⢰⣧⣀⡄⢀⠘⡿⣰⣿⣿⣿⣿⣿            ⢹⣿⢸⣿⣿⠟⠻⢿⣿⣿⣿⣿⣿⣿⣿⣶⣭⣉⣤⣿⢈⣼⣿⣿⣿⣿⣿⣿          ⢸⠇⡜⣿⡟⠄⠄⠄⠈⠙⣿⣿⣿⣿⣿⣿⣿⣿⠟⣱⣻⣿⣿⣿⣿⣿⠟⠁            ⠄⣰⡗⠹⣿⣄⠄⠄⠄⢀⣿⣿⣿⣿⣿⣿⠟⣅⣥⣿⣿⣿⣿⠿⠋⠄⠄⣾         ⠜⠋⢠⣷⢻⣿⣿⣶⣾⣿⣿⣿⣿⠿⣛⣥⣾⣿⠿⠟⠛⠉⠄⠄   */ #include<bits/stdc++.h>#include<unordered_map>#define Statixia ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);#define endl "\n"#define ceil(x, y) ((x + y -1) / y)#define floor(x, y) (x / y)#define round(x, y) ((x + y / 2) / y)#define clr(arr, x) memset(arr, x, sizeof arr)#define all(v) v.begin(),v.end()#define allr(s) s.rbegin(),s.rend()#define rt(s) return cout<<s,0#define watch(x) cout<<(#x)<<" = "<<x<<endl#define sz(s) (int)(s.size())#define OO 0x3f3f3f3f3f3f3f3fLLconst int oo = 0x3f3f3f3f, mod = 1e9 + 7;using namespace std;typedef long long ll;typedef long double ld;typedef unsigned long long ull;int dx[] { 1, -1, 0, 0, 1, 1, -1, -1 };int dy[] { 0, 0, 1, -1, 1, -1, 1, -1 };ll gcd(ll a, ll b) {    return b == 0 ? abs(a) : gcd(b, a % b);}ll lcm(ll a, ll b) {    return a / gcd(a, b) * b;} char getRealChar(char c, char dir){    char arr[30] = {'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p','a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', ';','z', 'x', 'c', 'v', 'b', 'n', 'm',',','.','/'};    for (int i = 0; i < 30; ++i)    {        if(arr[i] == c)        {            if(dir == 'R')            {                return arr[i - 1];            }            else            {                return arr[i + 1];            }        }    }} string solve(){    string lol;    char direction;    cin >> direction >> lol;    for (auto &it :lol)    {        if (direction == 'R')        {            it = getRealChar(it, 'R');        }        else        {            it = getRealChar(it, 'L');        }    }    return lol;} int main(){    Statixia    int t = 1;    //cin >> t;    while (t--)    {        cout << solve() << endl;    }    return 0;}