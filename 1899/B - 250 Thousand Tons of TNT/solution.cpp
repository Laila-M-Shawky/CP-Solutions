#include <bits/stdc++.h>using namespace std; int main() {    ios::sync_with_stdio(false);    cin.tie(nullptr);     int t;     cin >> t;    while (t--) {        int n;         cin >> n;        vector<long long> a(n);        for (int i = 0; i < n; ++i) cin >> a[i];         // Prefix sums على الترتيب الأصلي (بدون sort)        vector<long long> pref(n + 1, 0);        for (int i = 0; i < n; ++i) pref[i + 1] = pref[i] + a[i];         // احسب القواسم        vector<int> divs;        for (int d = 1; 1LL * d * d <= n; ++d) {            if (n % d == 0) {                divs.push_back(d);                if (1LL * d * d != n) divs.push_back(n / d);            }        }         long long ans = 0;        for (int k : divs) {            long long mn = LLONG_MAX, mx = LLONG_MIN;            for (int i = k; i <= n; i += k) {                long long s = pref[i] - pref[i - k]; // مجموع بلوك متتالي طوله k                mn = min(mn, s);                mx = max(mx, s);            }            ans = max(ans, mx - mn);        }         cout << ans << "\n";    }    return 0;}